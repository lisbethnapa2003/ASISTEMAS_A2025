
import streamlit as st

st.set_page_config(page_title="AuditorÃ­a de Servicios de TI", layout="wide")
st.title("AuditorÃ­a de Servicios de TI - EvaluaciÃ³n")

preguntas = [
    ("Mejora Continua", "Â¿Existe un proceso formal y documentado para identificar, registrar y priorizar oportunidades de mejora en los servicios de TI?"),
    ("Mejora Continua", "Â¿Se utilizan mÃ©tricas y reportes de manera consistente para medir el progreso y demostrar el Ã©xito de las iniciativas de mejora?"),
    ("Mejora Continua", "Â¿La cultura organizacional fomenta activamente la participaciÃ³n de todo el personal en las actividades de mejora continua?"),
    
    ("Control de Cambios", "Â¿La organizaciÃ³n sigue un procedimiento formal para la gestiÃ³n de todos los cambios de TI, incluyendo la evaluaciÃ³n de riesgos, el impacto y la autorizaciÃ³n?"),
    ("Control de Cambios", "Â¿Se comunican eficazmente los cambios planificados y ejecutados a todas las partes interesadas relevantes para minimizar interrupciones?"),
    ("Control de Cambios", "Â¿Existe una clara distinciÃ³n y un manejo adecuado para los diferentes tipos de cambio (estÃ¡ndar, normal y de emergencia)?"),

    ("GestiÃ³n de Incidentes", "Â¿Todos los incidentes son registrados, clasificados y priorizados de forma consistente segÃºn su impacto y urgencia?"),
    ("GestiÃ³n de Incidentes", "Â¿Se cuenta con un proceso documentado para la resoluciÃ³n de incidentes, incluyendo escalamiento, con el objetivo de restaurar el servicio dentro de los SLAs acordados?"),
    ("GestiÃ³n de Incidentes", "Â¿Se mantiene a los usuarios informados de manera proactiva sobre el estado y la resoluciÃ³n de sus incidentes?"),

    ("GestiÃ³n de Problemas", "Â¿Se lleva a cabo un anÃ¡lisis estructurado para identificar las causas raÃ­z de los incidentes recurrentes o de alto impacto?"),
    ("GestiÃ³n de Problemas", "Â¿Se documentan y gestionan eficazmente las soluciones temporales (workarounds) y los errores conocidos (known errors)?"),
    ("GestiÃ³n de Problemas", "Â¿Se implementan soluciones permanentes para los problemas con el fin de prevenir la recurrencia de incidentes?"),

    ("GestiÃ³n de Solicitudes de Servicio", "Â¿Se dispone de un catÃ¡logo de servicios claro y accesible para que los usuarios puedan realizar solicitudes de servicio predefinidas?"),
    ("GestiÃ³n de Solicitudes de Servicio", "Â¿El proceso para cumplir con las solicitudes de servicio estÃ¡ estandarizado y, en la medida de lo posible, automatizado para garantizar eficiencia?"),
    ("GestiÃ³n de Solicitudes de Servicio", "Â¿Se establecen y comunican a los usuarios los tiempos esperados para el cumplimiento de cada tipo de solicitud de servicio?"),

    ("Mesa de Servicio", "Â¿La Mesa de Servicio actÃºa como un punto Ãºnico de contacto (SPOC) eficaz y bien conocido para todas las consultas y reportes de los usuarios?"),
    ("Mesa de Servicio", "Â¿El personal de la Mesa de Servicio posee las habilidades (tÃ©cnicas y de comunicaciÃ³n) y las herramientas necesarias para resolver un alto porcentaje de las solicitudes en el primer contacto?"),
    ("Mesa de Servicio", "Â¿Se mide y analiza de forma regular la satisfacciÃ³n del usuario con el soporte proporcionado por la Mesa de Servicio para identificar Ã¡reas de mejora?"),

    ("GestiÃ³n de Nivel de Servicio", "Â¿Se han negociado, documentado y acordado formalmente los Acuerdos de Nivel de Servicio (SLA) con los clientes, basÃ¡ndose en los resultados de negocio?"),
    ("GestiÃ³n de Nivel de Servicio", "Â¿Se monitorea de manera continua el desempeÃ±o de los servicios y se compara con las metas establecidas en los SLAs?"),
    ("GestiÃ³n de Nivel de Servicio", "Â¿Se realizan revisiones periÃ³dicas de los SLAs con los clientes para asegurar que sigan siendo relevantes y que se estÃ© entregando el valor esperado?")
]

opciones = [
    "1- No cumple",
    "2- Cumple parcialmente",
    "3- Cumple en gran medida",
    "4- Cumple totalmente",
    "5- Cumple y supera expectativas"
]

respuestas = {}

# Agrupar por dominio y mostrar
dominio_actual = None
for dominio, pregunta in preguntas:
    if dominio != dominio_actual:
        st.subheader(dominio)
        dominio_actual = dominio
    seleccion = st.radio(pregunta, opciones, key=pregunta)
    respuestas[pregunta] = seleccion

if st.button("Enviar"):
    st.success("Respuestas registradas con Ã©xito. AquÃ­ estÃ¡n tus resultados:")
    for pregunta, respuesta in respuestas.items():
        st.write(f"ğŸ”¹ **{pregunta}** â†’ _{respuesta}_")
